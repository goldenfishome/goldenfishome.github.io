---
title: "GPD"
---

```{r,echo=FALSE, message=FALSE, warning=FALSE}
library(flipbookr)
library(tidyverse)
library(ggplot2)
library(forecast)
library(astsa) 
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
require(gridExtra)
library(quantmod)
library(vars)
```

### EDA

```{r}
gdp <- read.csv('data/Employment59.csv')
gdp$DATE <- as.Date(gdp$DATE)
gdp_ts <- ts(gdp$PAYEMS, star= c(1959,1),frequency = 4)
autoplot(gdp_ts)+ggtitle("US GDP")
```

```{r}
acf(gdp_ts)
```

```{r}
dec2=decompose(gdp_ts,type = "multiplicative")
plot(dec2)
```

```{r}
gdp_ts %>% diff() %>% ggtsdisplay() #first ordinary differencing
```

```{r}
gdp_ts %>% diff(lag = 4) %>% ggtsdisplay() #first ordinary differencing
```

### Determine Parameters

```{r}
gdp_ts %>% diff(lag=4) %>% diff() %>% ggtsdisplay() #do both
```

p:0,1,3 d:2 q:1,2,3 P:1,2,3 D:2 Q:1

```{r}
######################## Check for different combinations ########


#write a funtion
SARIMA.c=function(p1,p2,q1,q2,P1,P2,Q1,Q2,data){
  
  #K=(p2+1)*(q2+1)*(P2+1)*(Q2+1)
  
  temp=c()
  d=1
  D=1
  s=12
  
  i=1
  temp= data.frame()
  ls=matrix(rep(NA,9*35),nrow=35)
  
  
  for (p in p1:p2)
  {
    for(q in q1:q2)
    {
      for(P in P1:P2)
      {
        for(Q in Q1:Q2)
        {
          if(p+d+q+P+D+Q<=9)
          {
            
            model<- Arima(data,order=c(p-1,d,q-1),seasonal=c(P-1,D,Q-1))
            ls[i,]= c(p-1,d,q-1,P-1,D,Q-1,model$aic,model$bic,model$aicc)
            i=i+1
            #print(i)
            
          }
          
        }
      }
    }
    
  }
  
  
  temp= as.data.frame(ls)
  names(temp)= c("p","d","q","P","D","Q","AIC","BIC","AICc")
  
  temp
  
}

output = SARIMA.c(p1=1,p2=4,q1=1,q2=4,P1=1,P2=3,Q1=1,Q2=2, data = gdp_ts)
#output

knitr::kable(output)
```

```{r}
output[which.min(output$AIC),] 
```

```{r}
output[which.min(output$BIC),] 
```

```{r}
output[which.min(output$AICc),] 
```

```{r}
set.seed(123)
model_output <- capture.output(sarima(gdp_ts, 0,1,0,0,1,1,4))
```

```{r}
cat(model_output[21:50], model_output[length(model_output)], sep = "\n")
```

### Model Fitting

```{r}
fit <- Arima(gdp_ts, order=c(0,1,0), seasonal=c(0,1,1))
summary(fit)
```

forecasting

```{r}
fit %>% forecast(h=12) %>% autoplot() #next 3 years
```

```{r}
sarima.for(gdp_ts, 12, 0,1,0,0,1,1,4)
```

### Compare with Benchmark methods

```{r}
fit <- Arima(gdp_ts, order=c(0,1,0), seasonal=c(0,1,1))

autoplot(gdp_ts) +
  autolayer(meanf(gdp_ts, h=12),
            series="Mean", PI=FALSE) +
  autolayer(naive(gdp_ts, h=12),
            series="Naïve", PI=FALSE) +
  autolayer(snaive(gdp_ts, h=12),
            series="SNaïve", PI=FALSE)+
  autolayer(rwf(gdp_ts, h=12, drift=TRUE),
            series="Drift", PI=FALSE)+
  autolayer(forecast(fit,12), 
            series="fit",PI=FALSE) +
  guides(colour=guide_legend(title="Forecast"))
```

```{r}
f2 <- snaive(gdp_ts, h=12) 

accuracy(f2)
```

```{r}
summary(fit)
```

### Cross Validation

```{r}
k <- 75 # minimum data length for fitting a model  n*0.3
n <- length(gdp_ts)

i=1
err1 = c()
#err2 = c()

for(i in 1:(n-k))
{
  xtrain <- gdp_ts[1:(k-1)+i] #observations from 1 to 75
  xtest <- gdp_ts[k+i] #76th observation as the test set
  
  # Arima(gdp_ts, order=c(0,1,0), seasonal=c(0,1,1))
  fit <- Arima(xtrain, order=c(0,1,0), seasonal=c(0,1,1),include.drift=FALSE, method="ML")
  fcast1 <- forecast(fit, h=1)
  
  #capture error for each iteration
  # This is mean absolute error
  err1 = c(err1, abs(fcast1$mean-xtest)) 
  #err2 = c(err2, abs(fcast2$mean-xtest))
  
  # This is mean squared error
  err3 = c(err1, (fcast1$mean-xtest)^2)
  #err4 = c(err2, (fcast2$mean-xtest)^2)
  
}

(MAE1=mean(err1)) # This is mean absolute error
```

```{r}
MSE1=mean(err1)
MSE1
```
